generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime
  password  String
  Project   Project[]
}

model Developer {
  id          Int           @id @default(autoincrement())
  githubId    String        @unique
  username    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  email       String?
  password    String?
  Payout      Payout[]
  PullRequest PullRequest[]
}

model Payout {
  id            String    @id
  amount        Float
  paidAt        DateTime  @default(now())
  developerId   Int
  projectId     Int
  createdAt     DateTime  @default(now())
  status        String    @default("pending")
  transactionId String?
  updatedAt     DateTime
  Developer     Developer @relation(fields: [developerId], references: [id])
  Project       Project   @relation(fields: [projectId], references: [id])

  @@index([developerId])
  @@index([projectId])
}

model Project {
  id              Int           @id @default(autoincrement())
  name            String
  description     String?
  repoUrl         String
  adminId         Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime
  isActive        Boolean       @default(true)
  maxContributors Int?
  tags            String[]      @default([])
  highestBounty   Float
  lowestBounty    Float
  budget          Float         @default(0)
  Payout          Payout[]
  Admin           Admin         @relation(fields: [adminId], references: [id])
  PullRequest     PullRequest[]

  @@index([adminId])
  @@index([isActive])
}

model PullRequest {
  id              Int       @id @default(autoincrement())
  prNumber        Int
  title           String
  description     String?
  additions       Int
  deletions       Int
  hasTests        Boolean   @default(false)
  linkedIssue     String?
  merged          Boolean   @default(false)
  score           Float
  amountPaid      Float     @default(0)
  developerId     Int
  projectId       Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime
  bountyAmount    Float     @default(0)
  bountyClaimed   Boolean   @default(false)
  bountyClaimedAt DateTime?
  bountyClaimedBy Int?      // ID of the developer who claimed the bounty
  bountyClaimedAmount Float? // The actual amount claimed
  Developer       Developer @relation(fields: [developerId], references: [id])
  Project         Project   @relation(fields: [projectId], references: [id])

  @@unique([projectId, prNumber, developerId])
  @@index([developerId])
  @@index([projectId])
  @@index([bountyClaimed])
}
