generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  password  String
  projects  Project[]
}

model Developer {
  id        Int           @id @default(autoincrement())
  githubId  String        @unique
  username  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  email     String?
  password  String?
  payouts   Payout[]
  prs       PullRequest[]
}

model Project {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  repoUrl      String
  adminId      Int
  budget       Float
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  payouts      Payout[]
  admin        Admin         @relation(fields: [adminId], references: [id])
  pullRequests PullRequest[]

  @@index([adminId])
}

model PullRequest {
  id          Int       @id @default(autoincrement())
  prNumber    Int
  title       String
  description String?
  additions   Int
  deletions   Int
  hasTests    Boolean   @default(false)
  linkedIssue String?
  merged      Boolean   @default(false)
  score       Float
  amountPaid  Float     @default(0)
  developerId Int
  projectId   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  developer   Developer @relation(fields: [developerId], references: [id])
  project     Project   @relation(fields: [projectId], references: [id])

  @@unique([projectId, prNumber])
  @@index([developerId])
  @@index([projectId])
}

model Payout {
  id            String    @id @default(cuid())
  amount        Float
  paidAt        DateTime  @default(now())
  developerId   Int
  projectId     Int
  createdAt     DateTime  @default(now())
  status        String    @default("pending")
  transactionId String?
  updatedAt     DateTime  @updatedAt
  developer     Developer @relation(fields: [developerId], references: [id])
  project       Project   @relation(fields: [projectId], references: [id])

  @@index([developerId])
  @@index([projectId])
}
